#!/usr/bin/env node

/*
    osm-topo - 3D map generator
    Copyright (C) 2015  Aaron Spaulding

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*/

var error_handler = require('../lib/error-handler'),
	OverpassProvider = require('../lib/geometry/overpass-provider'),
	ColladaWriter = require('../lib/writers/collada-writer'),
	StlWriter = require('../lib/writers/stl-writer'),
	GeometryManager = require('../lib/geometry-manager'),
	Tile = require('../lib/osm/tile'),
	_ = require('lodash');

var sample_tiles = [
	{
		'name': 'Death Valley - Very Low Zoom',
		'tile': new Tile(7, 22, 49)
	}, {
		'name': 'Detroit - High Zoom',
		'tile': new Tile(11, 551, 757)
	}, {
		'name': 'Detroit - Low Zoom',
		'tile': new Tile(9, 137, 189)
	}, {
		'name': 'Grand Canyon - Low Zoom',
		'tile': new Tile(9, 96, 200)
	}, {
		'name': 'Rockies - Low Zoom',
		'tile': new Tile(9, 105, 193)
	}, {
		'name': 'Mount Everest - Low Zoom',
		'tile': new Tile(9, 379, 214)
	}
];

_.each(sample_tiles, function (sample) {
	var filename = sample.name.toLowerCase().replace(/[ \-]+/g, '-'),
		provider = new OverpassProvider(sample.tile.geo_bounds),
		manager = new GeometryManager(sample.tile);

	console.log('Building geometry for tile ' + sample.name);

	manager.add_geometry(provider);

	manager.get_triangles()
		.then(function (triangulator) {
			var writer = new StlWriter('demo/' + filename + '.stl');

			writer.matrix.multiply(sample.tile.matrix());

			writer.add(triangulator);

			writer.finish()
				.then(function () {
					console.log('File written');
				}, error_handler('writing file'));

		}, error_handler('getting triangles'))
		.catch(error_handler('preparing triangle writer'));
});